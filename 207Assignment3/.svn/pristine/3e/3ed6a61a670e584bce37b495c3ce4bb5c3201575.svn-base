// **********************************************************
// Assignment3:
// CDF user_name: c5zhanim
//
// Author: Yu Ang Zhang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// *********************************************************
package operator;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.apache.commons.lang3.StringEscapeUtils;


/**
 * The CitationNumberExtractor takes an URL from htmlExtractor and extract total
 * citations' number
 * 
 * @author Yu Ang Zhang
 * 
 */
public class CitationNumberExtractor extends ContentExtractor {

  /**
   * Call the super class constructor and store the HTMLExtractor within it
   * 
   * @param htmlExtractor a HTMLExtractor object for extracting a HTML string
   */
  public CitationNumberExtractor(HTMLExtractor htmlExtractor) {
    super(htmlExtractor);
    // TODO Auto-generated constructor stub
  }

  /**
   * Extract the citation number from the given URL
   * 
   * @param url String representation of a given URL
   * @throw Exception Throw Exception if the given live URL is invalid
   * @return the string representation of total citation number
   */
  @Override
  public String extract(String URL) throws Exception {

    String number = null;
    String rawHTMLString = super.getHTMLExtractor().getHTML(URL);
    String withCharacters = StringEscapeUtils.unescapeHtml3(rawHTMLString);

    String reForCitationExtraction =
        "Citations</a></td><td class=\"cit-borderleft cit-data\">(.*?)</td>";
    Pattern patternObject = Pattern.compile(reForCitationExtraction);
    Matcher matcherObject = patternObject.matcher(withCharacters);

    while (matcherObject.find()) {
      number = matcherObject.group(1);
    }
    return number;
  }

}
