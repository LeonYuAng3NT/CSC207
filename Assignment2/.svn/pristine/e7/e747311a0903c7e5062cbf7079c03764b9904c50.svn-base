// **********************************************************
// Assignment2:

// Student1:
// CDF user_name: c5zhanim
// UT Student #: 1001322847
// Author: Yu Ang Zhang
//
// Student2:
// CDF user_name: c4huanhf
// UT Student #: 1000076927
// Author: Yiming Huang
//

// Student3:
// CDF user_name: c4wangyk
// UT Student #: 999980579
// Author: Yi Jian Wang
//
// Student4:
// CDF user_name: c4wangzd
// UT Student #: 1001282319
// Author: Yu Wang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC 207 and understand the consequences.
// *********************************************************
package test;

import static org.junit.Assert.*;

import org.junit.Test;

import a2a.foundation.FileSystem;
import a2a.operator.CommandManual;

/**
 * A command manual test, uses to test if the methods are working as they
 * describe.
 * 
 * @author Yu Ang Zhang
 * @author Yiming Huang
 * @author Yi Jian Wang
 * @author Yu Wang
 */
public class CommandManualTest {

  /**
   * Test if the instance can be successfully create.
   */
  @Test
  public void testCommandManual() {
    try {

    } catch (Exception e) {
      fail("error msg");
    }
  }

  /**
   * Test if the method for checking input command for Command Manual is valid
   * or not.
   */
  @Test
  public void testIsValid() {
    FileSystem fileSystem = new FileSystem();
    CommandManual cmdManual = new CommandManual(fileSystem);
    assertTrue(cmdManual.isValid("man cd"));
    assertTrue(cmdManual.isValid("man ls"));
    assertTrue(cmdManual.isValid("man mkdir"));
    assertTrue(cmdManual.isValid("man pwd"));
  }

  /**
   * Test if the execute method in Command Manual works as it describes.
   */
  @Test
  public void testExecute() {
    // not yet done

  }


}


