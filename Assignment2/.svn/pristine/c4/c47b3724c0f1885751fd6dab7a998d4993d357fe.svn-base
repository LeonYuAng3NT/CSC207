// **********************************************************
// Assignment2:

// Student1:
// CDF user_name: c5zhanim
// UT Student #: 1001322847
// Author: Yu Ang Zhang
//
// Student2:
// CDF user_name: c4huanhf
// UT Student #: 1000076927
// Author: Yiming Huang
//

// Student3:
// CDF user_name: c4wangyk
// UT Student #: 999980579
// Author: Yi Jian Wang
//
// Student4:
// CDF user_name: c4wangzd
// UT Student #: 1001282319
// Author: Yu Wang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC 207 and understand the consequences.
// *********************************************************
package test;

import static org.junit.Assert.*;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import a2a.foundation.*;
import a2a.operator.*;
import org.junit.Before;
import org.junit.Test;

/**
 * A file editor test, use to test if the methods are working well.
 * 
 * @author Yu Ang Zhang
 * @author Yiming Huang
 * @author Yi Jian Wang
 * @author Yu Wang
 */
public class FileEditorTest {
  private FileSystem database;
  private FileEditor editor;

  /**
   * Set up the FileEditor.
   */
  @Before
  public void setUp() throws Exception {
    this.database = new FileSystem();
    File targetFile = new File("movielist", "Avatar");
    Directory targetDir = new Directory("books", "/books", database.getRoot());
    database.getCurrDir().getContent().add(targetFile);
    database.getCurrDir().getContent().add(targetDir);
    editor = new FileEditor(database);
  }

  /**
   * Test if the instance can be successfully created.
   */
  @Test
  public void testFileEditor() throws Exception {
    this.editor = new FileEditor(database);
  }

  /**
   * Test if the input command is a valid input for FileEditor.
   */
  @Test
  public void testIsValid() {

    editor = new FileEditor(database);
    assertTrue(editor.isValid("echo 300       >>    movielist"));
    assertTrue(editor.isValid("echo Incetpion >> movielist"));
    assertTrue(editor.isValid("echo hahahaha"));
    assertTrue(editor.isValid("echo lalalalala hahahahha"));
    assertFalse(editor.isValid("echo "));
    assertFalse(editor.isValid("echo  Giver >> books"));
    assertTrue(editor.isValid("echo Agent 47 >> movielist "));
  }

  /**
   * Test if execute method works as expected.
   */
  @Test
  public void testExecute() {

    editor = new FileEditor(database);
    editor.isValid("echo 300       >>    movielist");
    database = editor.execute();
    // assertTrue(((File)
    // database.getCurrDir().getContent().get(0)).getContents().
    // equals("300\n"));
    editor.isValid("echo Incetpion >> movielist");
    database = editor.execute();
    editor.isValid("echo  Giver >> books ");
    database = editor.execute();
    editor.isValid("echo Agent 47 >> movielist ");
    database = editor.execute();
    // assertTrue(((File)
    // database.getCurrDir().getContent().get(0)).getContents().
    // equals("300\nInception\nAgent 47\n"));
    ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    System.setOut(new PrintStream(outContent));
    editor.isValid("echo hahahaha");
    editor.isValid("echo lalalalala hahahahha");
    database = editor.execute();
    String expectedOutput =
        "300IncetpionGiverAgent 47hahahahalalalalala hahahahha\n";
    assertEquals(expectedOutput, outContent.toString());

  }

}
