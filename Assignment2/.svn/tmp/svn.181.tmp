// **********************************************************
// Assignment2:

// Student1:
// CDF user_name: c5zhanim
// UT Student #: 1001322847
// Author: Yu Ang Zhang
//
// Student2:
// CDF user_name: c4huanhf
// UT Student #: 1000076927
// Author: Yiming Huang
//

// Student3:
// CDF user_name: c4wangyk
// UT Student #: 999980579
// Author: Yi Jian Wang
//
// Student4:
// CDF user_name: c4wangzd
// UT Student #: 1001282319
// Author: Yu Wang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC 207 and understand the consequences.
// *********************************************************
package test;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import a2a.foundation.FileSystem;
import a2a.operator.DirectoryCreator;

/**
 * A directory creator test, uses to test if the methods are working as
 * expected.
 * 
 * @author Yu Ang Zhang
 * @author Yiming Huang
 * @author Yi Jian Wang
 * @author Yu Wang
 */
public class DirectoryCreatorTest {

  private FileSystem fileSystem;
  private String[][] passed;
  private String[][] failed;
  private String[] userInput;


  /**
   * Set up Directory Creator test.
   */
  @Before
  public void setUp() {
    fileSystem = new FileSystem();
    passed = new String[][] {{"mkdir", "aec"}, {"     mkdir", "adc"},
        {"mkdir", "file1"}};
    failed = new String[][] {{"mkdir"}, {"mkdir", "aec"}, {"mkdir", "."},
        {"mkdir", "abc/abc abc/abc"}};
    userInput = new String[] {"","","","",""};  
  }

  /**
   * Test if the instance can be successfully created.
   */
  @Test
  public void testDirectoryCreator() {
    try {
      new DirectoryCreator();
    } catch (Exception e) {
      fail("Failed to create an instance of directory creator.");
    }
  }

  /**
   * Test if the method successfully set up or throw exception in suitable
   * cases.
   * 
   * @throws Exception
   */
  @Test
  public void testSetUp() throws Exception {

    try {
      DirectoryCreator dirCreator = new DirectoryCreator();

        dirCreator.setUp(userInput[0], fileSystem);
        // System.out.println(Arrays.toString(command));

    } catch (Exception e) {
      fail("Unhandled exception have been thrown.");
    }

    // Test cases that should be failed
    try {
      DirectoryCreator dirCreator = new DirectoryCreator();

        dirCreator.setUp(userInput[1], fileSystem);
    } catch (Exception e) {
      // Empty catch statement
    }
  }

  /**
   * Test if the execute method for Directory Creator is working as expected.
   * 
   * @throws Exception
   */
  @Test
  public void testExecute() throws Exception {
    // DirectoryCreator creator = new DirectoryCreator();
    // creator.isValid("mkdir abc");
    // creator.isValid(" mkdir adc");
    // creator.isValid("mkdir file2 abc/file3");
    // creator.isValid("mkdir file2/file3 adc/file3");
    // creator.isValid("mkdir ../file4");
    // FileSystem afterExecuted = creator.execute();
    //
    // assertTrue(((Directory) afterExecuted.getCurrDir().getContent().get(0))
    // .getName().equals("abc"));
    // assertTrue(((Directory) afterExecuted.getCurrDir().getContent().get(1))
    // .getName().equals("adc"));
    // assertTrue(((Directory) afterExecuted.getCurrDir().getContent().get(2))
    // .getName().equals("file2"));
    // assertTrue(((Directory) afterExecuted.getCurrDir().getContent().get(3))
    // .getName().equals("file4"));
    // assertTrue(((Directory) ((Directory)
    // afterExecuted.getCurrDir().getContent()
    // .get(0)).getContent().get(0)).getName().equals("file3"));
    // assertTrue(((Directory) ((Directory)
    // afterExecuted.getCurrDir().getContent()
    // .get(0)).getContent().get(0)).getName().equals("file3"));
    // assertTrue(((Directory) ((Directory)
    // afterExecuted.getCurrDir().getContent()
    // .get(0)).getContent().get(0)).getName().equals("file3"));

  }
}
