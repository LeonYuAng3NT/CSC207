// **********************************************************
// Assignment2:

// Student1:
// CDF user_name: c5zhanim
// UT Student #: 1001322847
// Author: Yu Ang Zhang
//
// Student2:
// CDF user_name: c4huanhf
// UT Student #: 1000076927
// Author: Yiming Huang
//

// Student3:
// CDF user_name: c4wangyk
// UT Student #: 999980579
// Author: Yi Jian Wang
//
// Student4:
// CDF user_name: c4wangzd
// UT Student #: 1001282319
// Author: Yu Wang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC 207 and understand the consequences.
// *********************************************************
package test;

import a2a.foundation.FileSystem;
import a2a.foundation.InputHistory;
import a2a.operator.HistoryViewer;
import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertEquals;

/**
 * A history viewer test, use to test if the methods are working as expected.
 * 
 * @author Yu Ang Zhang
 * @author Yiming Huang
 * @author Yi Jian Wang
 * @author Yu Wang
 */
public class HistoryViewerTest {

  private FileSystem fileSystem;

  /**
   * Set up the HistoryViewer test.
   */
  @Before
  public void setUp() throws Exception {

    fileSystem = new FileSystem();
    InputHistory inputHistory = new InputHistory();

    inputHistory.record("cd root");
    inputHistory.record("man cd");
    inputHistory.record("mkdir abc");
    inputHistory.record("wrong");
    inputHistory.record("ls");

    fileSystem.setHistory(inputHistory);
  }

  /**
   * Test if the instance can be successfully created.
   */
  @Test
  public void testHistoryViewer() {

    HistoryViewer historyViewer = new HistoryViewer(fileSystem);
  }

  /**
   * Test if the input is a valid input.
   */
  @Test
  public void testIsValid() {

    HistoryViewer historyViewer = new HistoryViewer(fileSystem);
    assertTrue(historyViewer.isValid("history"));
    assertTrue(historyViewer.isValid("history 2"));
    assertTrue(historyViewer.isValid("history 5"));

    assertFalse(historyViewer.isValid("history 6"));
    assertFalse(historyViewer.isValid("history -1"));
    assertFalse(historyViewer.isValid("history f"));
  }

  /**
   * Test if Execute method is working as expected.
   */
  @Test
  public void testExecute() {

    HistoryViewer historyViewer = new HistoryViewer(fileSystem);
    historyViewer.isValid("history");

    ByteArrayOutputStream output = new ByteArrayOutputStream();
    System.setOut(new PrintStream(output));

    historyViewer.execute();

    String expected = "1. cd root\n2. man cd\n3. mkdir abc\n4. wrong\n5. ls\n";

    assertEquals(expected, output.toString());
  }
}
