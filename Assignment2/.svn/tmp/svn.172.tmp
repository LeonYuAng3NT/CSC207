package test;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import a2a.foundation.Directory;
import a2a.foundation.File;
import a2a.foundation.FileSystem;
import a2a.operator.PathNavigator;

/**
 * A path navigator test, uses to test if the methods are working as
 * expected.
 * 
 * @author Yiming Huang
 */
public class PathNavigatorTest {
  
  private FileSystem fileSystem;
  private String[][] passed;
  private String[][] failed;
  private String[] userInput;

  /**
   * Set up PathNavigator test.
   */
  @Before
  public void setUp() {
    fileSystem = new FileSystem();
    Directory root = fileSystem.getRoot();
    // Initialization of 
   Directory folder1 = new Directory("folder1","/", root );
   Directory folder2 = new Directory("folder2","/", root );
   Directory folder3 = new Directory("folder3","/", root );
   Directory foldera = new Directory("foldera","/folder1/",  folder1);
   Directory folderb = new Directory("folderb","/folder1/",  folder1);  
   File file = new File("file","", "/folder1/");
    fileSystem.getCurrDir().getContent().add(folder1);
    fileSystem.getCurrDir().getContent().add(folder2);
    fileSystem.getCurrDir().getContent().add(folder3);
    ((Directory) fileSystem.getCurrDir().getContent().get(0)).getContent().add(
        foldera);
    ((Directory) fileSystem.getCurrDir().getContent().get(0)).getContent().add(
        folderb);
    ((Directory) fileSystem.getCurrDir().getContent().get(0)).getContent().add(
        file);
    userInput = new String[] {"mv folder1/foldera /folder3", 
                              "mv folder1/folderb folder3",
                              "mv folder3 folder1",
                              "mv folder1/file folder2",
                              //failed case
                              "mv folder1 folder1/foldera"};
    passed = new String[][]{{"mv"}, {"/folder1/foldera","/folder3"}};
    failed = new String[][]{{"mv"}, {"/foldera","/folder3"}};

}
 

    

  /**
   * Test if the instance can be successfully created.
   */
  @Test
  public void testPathNavigator() {
    try {
      new PathNavigator();
    } catch (Exception e) {
      fail("Failed to create an instance of path navigator.");
    }
  }

  /**
   * Test if the method successfully set up or throw
   * exception in suitable cases.
   * 
   * @throws Exception
   */
  @Test
  public void testSetUp() throws Exception {

    try {
      PathNavigator pathNavigator = new PathNavigator();
   
        pathNavigator.setUp(userInput[0], fileSystem);

    } catch (Exception e) {
      fail("Unhandled exception have been thrown.");
    }

    // Test cases that should be failed
    try {
      PathNavigator pathNavigator = new PathNavigator();

        pathNavigator.setUp(userInput[4], fileSystem);
      fail("Exception should be thrown.");
    } catch (Exception e) {
      // Empty catch statement
    }
  }

  /**
   * Test if the execute method for NetworkProtocol is working as expected.
   * 
   * @throws Exception
   */
  @Test
  public void testExecute() throws Exception {

}
}
