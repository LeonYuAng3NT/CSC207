// **********************************************************
// Assignment2:

// Student1:
// CDF user_name: c5zhanim
// UT Student #: 1001322847
// Author: Yu Ang Zhang
//
// Student2:
// CDF user_name: c4huanhf
// UT Student #: 1000076927
// Author: Yiming Huang
//

// Student3:
// CDF user_name: c4wangyk
// UT Student #: 999980579
// Author: YI JIAN WANG
//
// Student4:
// CDF user_name: c4wangzd
// UT Student #: 1001282319
// Author: Yu Wang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC 207 and understand the consequences.
// *********************************************************
package a2a.operator;

import java.util.ArrayList;

import a2a.foundation.*;

/**
 * A content viewer, it uses to view the content of a directory.
 */
public class ContentViewer implements Command {
  private String[] command;
  private FileSystem fileSystem;
  private Directory adjacentDir;
  private ArrayList<Object> namelist;

  /**
   * Construct a ContentViewer
   */
  public ContentViewer(FileSystem filesystem) {
    this.fileSystem = filesystem;
  }

  /**
   * Check the validity of an user input.
   *
   * @param userInput An userInput which indicate an action
   * @return True if the user input indicate to an valid action
   */
  public boolean isValid(String userInput) {
    command = userInput.trim().split("\\s+");
    if (command.length >= 2) {
      for (int i = 1; i < command.length - 1; i++) {
        Searcher search = new Searcher(this.fileSystem);
        String valid = userInput.trim();
        ArgumentAnalyzer split = new ArgumentAnalyzer(valid);

        String[] result = split.convert();

        adjacentDir = search.find(result);

        if (adjacentDir != null) {
          for (Object item : adjacentDir.getContent()) {
            if (item instanceof Directory) {
              String name = ((Directory) item).getName();
              if (name.equals(result[result.length - 1])) {
                namelist.add((Directory) item);
              }
            } else if (item instanceof File) {
              String name = ((File) item).getName();
              if (name.equals(result[result.length - 1])) {
                namelist.add((File) item);
              }
            }
          }
          return true;
        }
      }
    }
    return false;
  }

  /**
   * Print out the content of a specified target.
   *
   * @param fileSystem The file system which used to print out the content.
   */
  public FileSystem execute() {
      for (Object item : namelist){
        if (item instanceof Directory){
          System.out.println(((Directory) item).getName() + " : ");
          for(int i =0; i < ((Directory) item).getContent().size(); i++){
            System.out.print(((Directory) item).getContent().get(i) + " ");
          }
        }else if (item instanceof File){
          System.out.println(((File) item).getName());       
        }
    } 
    // TODO: Complete this as soon as possible 
    return fileSystem;
 }
}