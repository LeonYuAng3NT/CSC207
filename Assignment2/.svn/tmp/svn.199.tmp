// **********************************************************
// Assignment2:

// Student1:
// CDF user_name: c5zhanim
// UT Student #: 1001322847
// Author: Yu Ang Zhang
//
// Student2:
// CDF user_name: c4huanhf
// UT Student #: 1000076927
// Author: Yiming Huang
//

// Student3:
// CDF user_name: c4wangyk
// UT Student #: 999980579
// Author: Yi Jian Wang
//
// Student4:
// CDF user_name: c4wangzd
// UT Student #: 1001282319
// Author: Yu Wang
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC 207 and understand the consequences.
// *********************************************************
package test;

import static org.junit.Assert.*;
import java.util.List;

import org.junit.Before;
import org.junit.Test;
import a2a.foundation.File;
import a2a.foundation.*;
import a2a.operator.FileReader;

/**
 * A file reader test, use to test if the methods in the FileReader are working
 * as expected.
 * 
 * @author Yu Ang Zhang
 * @author Yiming Huang
 * @author Yi Jian Wang
 */
public class FileReaderTest {
  private FileSystem fileSystem;
  private FileReader reader;

  private String[] passed;
  private String[] failed;

  /**
   * Set up the FileReader test.
   */
  @Before
  public void setUp() {
    fileSystem = new FileSystem();
    // Get root
    Directory root = fileSystem.getRoot();
    List<Object> contentOfRoot = root.getContent();

    // Create new directory
    Directory directoryAbc = new Directory("abc", "/abc", fileSystem.getRoot());
    File file1 = new File("GameofThrones", "Clash of Kings", "myaddress");
    File file2 =
        new File("ToKillAMockingBird", "Very good literature", "myaddress2");
    contentOfRoot.add(directoryAbc);
    contentOfRoot.add(file1);
    contentOfRoot.add(file2);

    // Update the root content
    root.setContent(contentOfRoot);

    this.failed = new String[] {"cat abc", "   cat GameofThro"};
    this.passed = new String[] {"cat ToKillAMockingBird",
        "cat GameofThrones ToKillAMockingBird", "cat",
        "cat ToKillAMockingBird"};



  }

  /**
   * Test if the instance can be created successfully.
   */
  @Test
  public void testFileReader() {
    try {
      reader = new FileReader();

    } catch (Exception e) {
      fail("Failed to create an instance of FileReader");
    }
  }

  /**
   * Test if the method successfully set up or throw exception in suitable
   * cases.
   */
  @Test
  public void testSetUp() {

    // Test cases that should be passed
    try {
      for (String command : passed) {
        reader.setUp(command, fileSystem);
      }
    } catch (Exception e) {
      fail("Failed to set up the CommandManual.");
    }

    // Test cases that should be failed
    try {
      for (String command : failed) {
        reader.setUp(command, fileSystem);
      }
      fail("Case which should be failed is accidentally passed.");
    } catch (Exception e) {
      // Empty catch statement
    }
  }

  /**
   * Test if the execute method is working as expected.
   */
  @Test
  public void testExecute() {


  }


}
