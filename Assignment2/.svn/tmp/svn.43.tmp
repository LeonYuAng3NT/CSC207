package a2a.operator;

import a2a.foundation.*;
import a2a.operator.*;


/**
 * A directory navigator, it uses to navigate
 * from current directory to target directory
 */
public class DirectoryNavigator implements Command {

  String[] command;
  private FileSystem filesystem;
  private Directory dir;
  private String Directoryname;
  /**
   * Construct a DirectoryNavigator
   */
  public DirectoryNavigator(FileSystem filesystem) {
    this.filesystem = filesystem;
  }

  /**
   * Check the validity of an user input.
   *
   * @param userInput An userInput which indicate an action
   * @return True if the user Input which indicate to an valid action
   */
  @Override
  public boolean isValid(String userInput) {
    // Find the final directory and then assign it to the private attribute
    // of class
    Searcher search = new Searcher(this.filesystem);
    String valid = userInput.trim();
    ArgumentAnalyzer split = new ArgumentAnalyzer(valid);
    
    String [] result = split.convert();
    //local variable points to the target directory that the user is calling
    Directoryname = result[result.length-1];
    
    dir  = search.findDir(result);
 
    if (dir != null){
      for (Object item : dir.getContent()){
        if (item instanceof Directory){
          String name = ((Directory) item).getName();
          if(name.equals(Directoryname)){
            return true;
          }
        }
      }
    }   
    return false;
  }

  /**
   * Navigate to the target directory.
   *
   * @param fileSystem The file system which used to navigate
   */
  @Override
  public FileSystem execute(){
    for (Object item : dir.getContent()){
      if (item instanceof Directory){
        String name = ((Directory) item).getName();
        if(name.equals(Directoryname)){
          filesystem.setCurrDir((Directory)item);
        }
      }
    }
    
    // TODO: Complete this as soon as possible.
    return this.filesystem;
  }
}
